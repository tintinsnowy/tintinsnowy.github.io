<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sherry&#39; blog</title>
    <link>http://tintinsnowy.com/</link>
    <description>Recent content on Sherry&#39; blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Dec 2015 12:40:57 +0800</lastBuildDate>
    <atom:link href="http://tintinsnowy.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>博客工具</title>
      <link>http://tintinsnowy.com/2015/12/27/%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7</link>
      <pubDate>Sun, 27 Dec 2015 12:40:57 +0800</pubDate>
      
      <guid>http://tintinsnowy.com/2015/12/27/%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7</guid>
      <description>

&lt;h1 id=&#34;楔子:4396d87bf52c8e0d9b74841cebec2d9e&#34;&gt;楔子&lt;/h1&gt;

&lt;p&gt;喜欢写Blog的人，会经历三个阶段。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。
  第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
  第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;搭建自己的博客是有点折腾，但是会乐在其中。 考虑到技术文章会涉及到大量的英文单词，或者命令就用英文写。 概述类和心得篇就用中文。
p.s.&lt;a href=&#34;http://blog.csdn.net/u011613321&#34;&gt;&lt;code&gt;旧csdn博客地址&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所以针对新博客搭建有几个plan：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;初期：基本功能&lt;code&gt;分类&lt;/code&gt;， &lt;code&gt;标签&lt;/code&gt;，&lt;code&gt;联系方式&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;中期：&lt;code&gt;评论&lt;/code&gt;， &lt;code&gt;网站分析&lt;/code&gt;， &lt;code&gt;rss&lt;/code&gt;， &lt;code&gt;图片托管&lt;/code&gt;，&lt;code&gt;Gallery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;长期：和顶级域名分离，blog分&lt;code&gt;En&lt;/code&gt; 和&lt;code&gt;Ch&lt;/code&gt;， 兴许还有&lt;code&gt;De&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;初期已经差不多完成了，继续折腾。&lt;/p&gt;

&lt;h1 id=&#34;disqus-添加评论功能:4396d87bf52c8e0d9b74841cebec2d9e&#34;&gt;Disqus 添加评论功能&lt;/h1&gt;

&lt;p&gt;在很久以前评论还是属于博客主的资源，在搬迁的过程中文章评论一个不能丢。数据存在网站数据中。 近年网络社交兴起博客主为了吸引访客互动会使用第三方网站托管评论。Disqus就是这样的第三方社会化评论平台，注册Disqus后你会发现：这根本就是个社交平台啊！    所以同志们在你的博客上评论后，你登陆Disqus 后台，会看见&lt;code&gt;评论&lt;/code&gt;， &lt;code&gt;推荐&lt;/code&gt;，&lt;code&gt;喜爱&lt;/code&gt; 等等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;个人信息&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Profile: Full Name(昵称，任意取)&lt;/li&gt;
&lt;li&gt;Avatar:头像支持本地上传，网络图像URL，所在网站的默认头像，Facebook头像，Twitter头像。当然，后两者需要绑定对应的社交帐号。&lt;/li&gt;
&lt;li&gt;Serives:第三方帐号的管理界面，可进行绑定、解绑社交帐号，目前所支持的除了三大社交网络帐号，还有Yahoo! 已绑定的帐号名在Disqus评论系统上是公开的。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;账户&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Username： &lt;code&gt;唯一&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Email ： 邮箱进行验证。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;开始加入Disqus&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;点击&lt;a href=&#34;https://disqus.com/admin/create/&#34;&gt;注册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这里注册的&lt;code&gt;Site name&lt;/code&gt; 就是我们将要用到的&lt;code&gt;shortname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注册后你会得到一个 &lt;code&gt;sherrysblog.disqus.com/&lt;/code&gt;东西，其中&lt;code&gt;sherrysblog&lt;/code&gt;就是我的&lt;code&gt;shortname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在我的账户内&lt;code&gt;https://sherrysblog.disqus.com/admin/settings/general/&lt;/code&gt;
可以进行个人网站的设置， 语言设置等。&lt;/li&gt;
&lt;li&gt;done.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;有收费的可能&lt;/li&gt;
&lt;li&gt;不支持国内社交账号&lt;/li&gt;
&lt;li&gt;没有私信功能。&lt;/li&gt;
&lt;li&gt;可能被墙&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;google-analytics-网站分析:4396d87bf52c8e0d9b74841cebec2d9e&#34;&gt;Google Analytics 网站分析&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.mycommerce.com/images/mycommercecorner/thumbnails/Google_Analytics/GASample.jpg&#34; alt=&#34;google analytics&#34; /&gt;
 这其实是个很强大的工具，但是想想挺可怕的。因为如果作为商业用户，会实时监控我们大众用户的行为，这就是所谓大数据%&amp;gt;_&amp;lt;%&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;注册 google analytics的账号&lt;/li&gt;
&lt;li&gt;填写自己blog 的位置&lt;code&gt;tintinsnowy.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将Tracing code 粘贴到自己&lt;code&gt;config.toml&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;通过google analytics 后台账号查看用户访问情况。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;mdash;&amp;ndash;&lt;strong&gt;TBC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;writen by Sherry&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup a free blog based on Hugo and Github</title>
      <link>http://tintinsnowy.com/2015/12/26/setup-a-free-blog-based-on-hugo-and-github</link>
      <pubDate>Sat, 26 Dec 2015 13:07:31 +0200</pubDate>
      
      <guid>http://tintinsnowy.com/2015/12/26/setup-a-free-blog-based-on-hugo-and-github</guid>
      <description>

&lt;h1 id=&#34;hello-github:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Hello &lt;code&gt;GitHub!&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;GitHub is more than a collaborative tool to make your software development more effective. In fact, it is more like a community where you share and contribute your code.&lt;/p&gt;

&lt;p&gt;Since we want to build our own blog, so the whole &lt;code&gt;static websites&lt;/code&gt; should be stored in Github. Now here we go. sign up in &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay！ you are now  a member of github, enjoy your coding journey!&lt;/p&gt;

&lt;h1 id=&#34;bravo-hugo:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Bravo！  &lt;code&gt;Hugo&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;A powerful and fast Website engine is Hugo， which is designed for &lt;code&gt;go lovers&lt;/code&gt;！
&lt;code&gt;Hugo&lt;/code&gt; flexibly works with many formats and is ideal for blogs, docs, portfolios and much more. Hugo’s speed fosters creativity and makes building a website fun again.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It helps you to build your blog, you don&amp;rsquo;t have to know the details of &lt;code&gt;css&lt;/code&gt; , &lt;code&gt;js&lt;/code&gt;,&lt;code&gt;MySQL&lt;/code&gt; etc. It saves you a lot of trouble, and you can concentrate more on your writing and coding.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-is-static-web:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;why is static web?&lt;/h2&gt;

&lt;p&gt;Because&amp;hellip;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quick to develop&lt;/li&gt;
&lt;li&gt;Cheap to develop&lt;/li&gt;
&lt;li&gt;Cheap to host.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are what we want for blogs!&lt;/p&gt;

&lt;h2 id=&#34;usage-of-hugo:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Usage of Hugo&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install Hugo&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* [Download](http://gohugo.io/)
* decompression
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;New  blog&amp;rsquo;s framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;enter  your hugo path&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cd hugo
    $ ls -la

now you can setup your first website.  `tintinsnowy.github.io` should                 be replaced by your website  name

    $hugo new site tintinsnowy.github.io

If you find something wrong with your path, then use the  absolute path
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ home/sherry/code/hugo/hugo new site tintinsnowy.github.io

    Then you can see the tree:

      ▸ archetypes/
      ▸ content/
      ▸ layouts/
      ▸ static/
      config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;The content of blog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;your articles should be store in the path of : &lt;code&gt;content/post&lt;/code&gt;. adll the articles are in  markdown format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cd tintinsnowy.github.io
    $ hugo new about.md
    $ hugo new post/firstblog.md

  Then open the `firstblog.md` , you can see the automatically generated file

    +++
    date = &amp;quot;2015-12-26T08:36:54-07:00&amp;quot;
    draft = true
    title = &amp;quot;firstblog&amp;quot;
    +++ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can add the content into your file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    +++
    date = &amp;quot;2015-01-08T08:36:54-07:00&amp;quot;
    draft = true
    title = &amp;quot;first&amp;quot;
    +++
    ####Hello Hugo

     1. aaa
     2. bbb
     3. ccc 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Find a joyful theme for your blog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are a few &lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;opensource-themes&lt;/a&gt;   Every theme has detailed description of usage, but &lt;code&gt;NOT all&lt;/code&gt; the configurations are the same. You should see the &lt;code&gt;Homepage&lt;/code&gt; of what you&amp;rsquo;ve chosen.
   For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ pwd
    &amp;gt;/home/sherry/code/hugo/tintinsnowy.github.io
    $ mkdir themes
    $ cd themes
    $ git clone https://github.com/spf13/hyde.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;now  you can see that the theme has been in your &lt;code&gt;themes/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Set configuration of your theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This step is &lt;code&gt;extremely important&lt;/code&gt;   , different theme has different ways of setting, so it&amp;rsquo;s your time to design. But before you do, you should read the homepage of your theme.&lt;/p&gt;

&lt;p&gt;Hugo can read your configuration as JSON, YAML or TOML. Hugo supp
orts parameters custom configuration too. Refer to the &lt;code&gt;theme&lt;/code&gt; that you&amp;rsquo;ve chosen  for details.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&amp;hellip;..
  you can see how it looks like in localhost:(the &lt;code&gt;hugo-icarus&lt;/code&gt; is the name of theme, you need to change it), open &lt;code&gt;http://localhost:1313/&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; sherry@sherry:~/code/hugo/tintinsnowy.github.io$ sudo /home/sherry/code/hugo/hugo server --theme=hugo-icarus --buildDrafts --watch
1 of 1 draft rendered
0 future content
8 pages created
13 paginator pages created
6 tags created
4 categories created
in 103 ms
Watching for changes in /home/sherry/code/hugo/tintinsnowy.github.io/{data,content,layouts,static,themes}
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are satisfied with your blog in localhost, you want to display it on web right? Okay do the following steps!&lt;/p&gt;

&lt;h1 id=&#34;create-your-blog-s-repository-on-github:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Create your blog&amp;rsquo;s repository on Github&lt;/h1&gt;

&lt;p&gt;Aha, I suppose that you are familiar with git. If not, there is a whale of tutorial of git and github. So shall we start?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;create a new repository&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;User &amp;amp; Organization&lt;/code&gt; Pages live in a special repository dedicated to GitHub Pages files. You will need to name this repository with the &lt;code&gt;account name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You must use the &lt;strong&gt;&lt;code&gt;username.github.io&lt;/code&gt;&lt;/strong&gt; naming scheme.
Content from the master branch will be used to build and publish your GitHub Pages site. A repository like &lt;code&gt;joe/bob.github.io&lt;/code&gt; will &lt;code&gt;not&lt;/code&gt; build a User Pages site. Don&amp;rsquo;t ask me why&amp;hellip; &lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;see here&lt;/a&gt; .&lt;br /&gt;
When User Pages are built, they are available at &lt;code&gt;http(s)://&amp;lt;username&amp;gt;.github.io.&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, my account name is &lt;code&gt;tintinsnowy&lt;/code&gt; , so I have to name my repository &lt;code&gt;tintinsnowy.github.io&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Build your static website&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $hugo --theme=hugo-icarus --baseUrl=&amp;quot;http://tintinsnowy.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Upload your website&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd public
$ git init
$ git remote add origin https://github.com/tintinsnowy/tintinsnowy.github.io.git
$ git add -A
$ git commit -m &amp;quot;first commit&amp;quot;
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;See your website&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In your github repository &lt;code&gt;setting&lt;/code&gt;, you can see this:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Your site is published at &lt;a href=&#34;http://tintinsnowy.github.io&#34;&gt;http://tintinsnowy.github.io&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Now, it seems like the end of our Project. Yet if you wish your blog&amp;rsquo;s address more unique, you may buy a custom domain.&lt;/p&gt;

&lt;h1 id=&#34;buy-domain:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Buy domain&lt;/h1&gt;

&lt;p&gt;A few suggestion:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.godaddy.com&#34;&gt;godaddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://aliyun.com&#34;&gt;aliyun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;..&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;setting:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Setting&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Adding a CNAME file to your repository:
&lt;strong&gt;Notice&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the file name field, type CNAME &lt;code&gt;(with all caps!).&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;tintinsnowy.com&lt;/code&gt;, not &lt;code&gt;https://tintinsnowy.com&lt;/code&gt;. Note that there can only be &lt;code&gt;one domain&lt;/code&gt; in the CNAME file.
(well you should type in your own CNAME, instead of &lt;code&gt;tintinsnowy&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Setting your account&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CNAME&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;@&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;tintinsnowy.github.io.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;www&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;192.30.252.153&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;www&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;192.30.252.154&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Don&amp;rsquo;t forget the &lt;code&gt;.&lt;/code&gt; after &lt;code&gt;tintinsnowy.github.io&lt;/code&gt;
If you want to know why should be setting like this, see the references.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;waiting..&lt;/li&gt;

&lt;li&gt;&lt;p&gt;checkout&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; tintinsnowy.com
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Writen by Sherry&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;reference:9555be3a2c94fddd2b0e40a3a2f9e383&#34;&gt;Reference:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&#34;&gt;Setting up a custom domain with GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;Github Pages Setting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cnfeat.com/blog/2014/05/10/how-to-build-a-blog/&#34;&gt;cnfeat.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.coderzh.com/2015/08/29/hugo/&#34;&gt;coderzh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://quantumman.me/blog/setting-up-a-domain-with-gitHub-pages.html&#34;&gt;quantumman.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>http://tintinsnowy.com/2015/12/25/go-is-for-lovers</link>
      <pubDate>Fri, 25 Dec 2015 13:47:08 +0200</pubDate>
      
      <guid>http://tintinsnowy.com/2015/12/25/go-is-for-lovers</guid>
      <description>

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-go-templates:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Introduction to Go Templates&lt;/h2&gt;

&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;

&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-syntax:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Basic Syntax&lt;/h2&gt;

&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;http://tintinsnowy.com/layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;http://tintinsnowy.com/layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;includes:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Includes&lt;/h2&gt;

&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logic:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Logic&lt;/h2&gt;

&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;

&lt;h3 id=&#34;iteration:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ range array }}
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $element := array}}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conditionals:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Conditionals&lt;/h3&gt;

&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;

&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pipes:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Pipes&lt;/h2&gt;

&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;

&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;

&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the same as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Could be rewritten as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-aka-the-dot:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Context (aka. the dot)&lt;/h2&gt;

&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;

&lt;h1 id=&#34;hugo-parameters:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Hugo Parameters&lt;/h1&gt;

&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;

&lt;h2 id=&#34;using-content-page-parameters:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;

&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;http://tintinsnowy.com/content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;

&lt;p&gt;Here is the example front matter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-site-config-parameters:08cfabf6312c9fe10477f4bc9e27bdd5&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;

&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;

&lt;p&gt;For instance, you might declare:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;params:
  CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot;
  TwitterUser: &amp;quot;spf13&amp;quot;
  SidebarRecentLimit: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Introducing Icarus and it&#39;s features</title>
      <link>http://tintinsnowy.com/2015/12/24/introducing-icarus-and-its-features</link>
      <pubDate>Thu, 24 Dec 2015 16:56:43 +0200</pubDate>
      
      <guid>http://tintinsnowy.com/2015/12/24/introducing-icarus-and-its-features</guid>
      <description>

&lt;p&gt;Icarus is a responsive and customizable theme for bloggers. It&amp;rsquo;s a port of the same-named theme for &lt;a href=&#34;//hexo.io&#34;&gt;Hexo&lt;/a&gt; made by &lt;a href=&#34;https://github.com/ppoffice&#34;&gt;Ruipeng Zhang&lt;/a&gt;. Noteworthy features of this Hugo theme are the integration of a comment-system powered by Disqus, localization (l10n) support, syntax highlighting for source code, optional widgets for the sidebar and a handful &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; to make your life easier.&lt;/p&gt;

&lt;h2 id=&#34;get-the-theme:33ea911532f0c95309659f2412cd62cb&#34;&gt;Get the theme&lt;/h2&gt;

&lt;p&gt;I assume you&amp;rsquo;ve Git installed. Inside the folder of your Hugo site run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir themes
$ cd themes
$ git clone git@github.com:digitalcraftsman/hugo-icarus-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a folder called &lt;code&gt;hugo-icarus-theme&lt;/code&gt; inside the &lt;code&gt;themes&lt;/code&gt; directory, that we created a few moments ago. For more information read the official &lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;setup guide&lt;/a&gt; of Hugo.&lt;/p&gt;

&lt;h2 id=&#34;setup:33ea911532f0c95309659f2412cd62cb&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;In the next step navigate to the &lt;code&gt;exampleSite&lt;/code&gt; folder at &lt;code&gt;themes/hugo-icarus-theme/exampleSite/&lt;/code&gt;. It&amp;rsquo;s structure shoud look similar to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exampleSite
├── config.toml
├── content
│   └── post
│       ├── creating-a-new-theme.md
│       ├── go-is-for-lovers.md
│       ├── hugo-is-for-lovers.md
│       ├── introducing-icarus-and-its-features.md
│       ├── linked-post.md
│       └── migrate-from-jekyll.md
├── data
│   └── l10n.toml
└── static
    └── banners
        └── placeholder.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order to get your site running, you need to copy &lt;code&gt;config.toml&lt;/code&gt; and &lt;code&gt;data/l10n.toml&lt;/code&gt; into the root folders.&lt;/p&gt;

&lt;h2 id=&#34;the-config-file:33ea911532f0c95309659f2412cd62cb&#34;&gt;The config file&lt;/h2&gt;

&lt;p&gt;Now, let us take a look into the &lt;code&gt;config.toml&lt;/code&gt;. Feel free to play around with the settings.&lt;/p&gt;

&lt;h3 id=&#34;comments:33ea911532f0c95309659f2412cd62cb&#34;&gt;Comments&lt;/h3&gt;

&lt;p&gt;The opional comment system is powered by Disqus. Enter your shortname to enable the comment section under your posts.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqusShortname = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;menu:33ea911532f0c95309659f2412cd62cb&#34;&gt;Menu&lt;/h3&gt;

&lt;p&gt;You can also define the items menu entries as you like. First, let us link a post that you&amp;rsquo;ve written. We can do this in the frontmatter of the post&amp;rsquo;s content file by setting &lt;code&gt;menu&lt;/code&gt; to &lt;code&gt;main&lt;/code&gt;. Take a look at the menu if you want to see a live example.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
menu = &amp;quot;main&amp;quot;
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Furthermore, we can add entries that don&amp;rsquo;t link to posts. Back in the &lt;code&gt;config.toml&lt;/code&gt; you&amp;rsquo;ll find a section for the menus:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[params.menu]]
    before = true
    label  = &amp;quot;Home&amp;quot;
    link   = &amp;quot;/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Define a label and enter the URL to resource you want to link. With &lt;code&gt;before&lt;/code&gt; you can decide wether the link should appear before &lt;strong&gt;or&lt;/strong&gt; after all linked posts in the menu. &lt;code&gt;Home&lt;/code&gt; appears before the linked post, &lt;code&gt;Tags&lt;/code&gt; and &lt;code&gt;Categories&lt;/code&gt; after them (as in the menu above).&lt;/p&gt;

&lt;h3 id=&#34;tell-me-who-you-re:33ea911532f0c95309659f2412cd62cb&#34;&gt;Tell me who you&amp;rsquo;re&lt;/h3&gt;

&lt;p&gt;Maybe you noticed the profile section on the left. Add your social network accounts to the profile section on the left by entering your username under &lt;code&gt;social&lt;/code&gt;. The links to your account will be create automatically.&lt;/p&gt;

&lt;h3 id=&#34;widgets:33ea911532f0c95309659f2412cd62cb&#34;&gt;Widgets&lt;/h3&gt;

&lt;p&gt;On the right, you can see some useful widgets that you can activate as you like. You can deactivate them under &lt;code&gt;params.widgets&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[params.widgets]
    recent_articles = false
    categories = true
    tags = true
    tag_cloud = true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;localization-l10n:33ea911532f0c95309659f2412cd62cb&#34;&gt;Localization (l10n)&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t blog in english and you want to translate the theme into your native locale? No problem. Take a look in the &lt;code&gt;data&lt;/code&gt; folder and you&amp;rsquo;ll find a file &lt;code&gt;l10n.toml&lt;/code&gt; that we&amp;rsquo;ve copied at the beginning. It contains all strings related to the theme. Just replace the original strings with your own.&lt;/p&gt;

&lt;h2 id=&#34;linking-thumbnails:33ea911532f0c95309659f2412cd62cb&#34;&gt;Linking thumbnails&lt;/h2&gt;

&lt;p&gt;After creating a new post you can define a banner by entering the relative path to the image.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;banner = &amp;quot;banners/placeholder.png&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way you can store them either next to the content file or in the &lt;code&gt;static&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2 id=&#34;mathematical-equations:33ea911532f0c95309659f2412cd62cb&#34;&gt;Mathematical equations&lt;/h2&gt;

&lt;p&gt;In case you need to display equations you can insert your Latex or MathML code and it works out of the box thanks to &lt;a href=&#34;https://www.mathjax.org&#34;&gt;MathJax&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\[ z = r \cdot (\sin{\phi} + \cos{\phi} \cdot i) \]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[ z = r \cdot (\sin{\phi} + \cos{\phi} \cdot i) ]&lt;/p&gt;

&lt;h2 id=&#34;shortcodes:33ea911532f0c95309659f2412cd62cb&#34;&gt;Shortcodes&lt;/h2&gt;

&lt;p&gt;Last but not least I included some useful &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; to make your like easier.&lt;/p&gt;

&lt;h3 id=&#34;gallery:33ea911532f0c95309659f2412cd62cb&#34;&gt;Gallery&lt;/h3&gt;

&lt;p&gt;This way you can include a gallery into your post. Copy the code below into your content file and enter the relative paths to your images.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt; gallery
    &amp;quot;/banners/placeholder.png&amp;quot;
    &amp;quot;/banners/placeholder.png&amp;quot;
    &amp;quot;/banners/placeholder.png&amp;quot;
&amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note: In order to prevent the execution of the shortcodes I added a space between &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; at the beginning and the end of the shortcode. Revert this after copying.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;article-gallery&#34;&gt;
    &lt;div class=&#34;article-gallery-photos&#34;&gt;
        
        &lt;a class=&#34;article-gallery-img fancybox&#34; href=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; rel=&#34;group1&#34;&gt;
            &lt;img src=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; itemprop=&#34;image&#34;&gt;
        &lt;/a&gt;
        
        &lt;a class=&#34;article-gallery-img fancybox&#34; href=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; rel=&#34;group1&#34;&gt;
            &lt;img src=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; itemprop=&#34;image&#34;&gt;
        &lt;/a&gt;
        
        &lt;a class=&#34;article-gallery-img fancybox&#34; href=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; rel=&#34;group1&#34;&gt;
            &lt;img src=&#34;http://tintinsnowy.com/banners/placeholder.png&#34; itemprop=&#34;image&#34;&gt;
        &lt;/a&gt;
        
    &lt;/div&gt;
&lt;/div&gt;


&lt;h3 id=&#34;github-gists:33ea911532f0c95309659f2412cd62cb&#34;&gt;Github Gists&lt;/h3&gt;

&lt;p&gt;Enter the id of your gist and you&amp;rsquo;re ready to go.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt;  gist &amp;quot;85f59771b5ae1e2091a8&amp;quot; &amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note, that this only works with public gists since authentification is not supported.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/digitalcraftsman/85f59771b5ae1e2091a8.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;jsfidde:33ea911532f0c95309659f2412cd62cb&#34;&gt;JSFidde&lt;/h3&gt;

&lt;p&gt;It works the same with JSFiddle examples you want to showcase. The parameter &lt;code&gt;id&lt;/code&gt; consists of the username and id of the example.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt; jsfiddle id=&amp;quot;zalun/NmudS&amp;quot; &amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;iframe
  style=&#34;width: 100%; height: auto;&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34;
  src=&#34;https://jsfiddle.net/zalun/NmudS/embedded/&#34;&gt;
&lt;/iframe&gt;
&lt;br&gt;&lt;br&gt;


&lt;p&gt;As descibed in the &lt;a href=&#34;http://doc.jsfiddle.net/use/embedding.html&#34;&gt;docs of JSFiddle&lt;/a&gt;, you can define which tabs will be shown. Enter the tabs you want to see separated by a comma in the &lt;code&gt;tabs&lt;/code&gt; parameter.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt; jsfiddle id=&amp;quot;zalun/NmudS&amp;quot; tabs=&amp;quot;html,result&amp;quot; &amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do you see the difference?&lt;/p&gt;

&lt;iframe
  style=&#34;width: 100%; height: auto;&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34;
  src=&#34;https://jsfiddle.net/zalun/NmudS/embedded/html,result/&#34;&gt;
&lt;/iframe&gt;
&lt;br&gt;&lt;br&gt;


&lt;h3 id=&#34;vimeo-and-youtube:33ea911532f0c95309659f2412cd62cb&#34;&gt;Vimeo and Youtube&lt;/h3&gt;

&lt;p&gt;The embedding of videos from Vimeo and Youtube is also supported.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt; youtube &amp;quot;w7Ft2ymGmfc&amp;quot; &amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; src=&#34;https://www.youtube.com/embed/w7Ft2ymGmfc&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;br&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;lt; vimeo &amp;quot;137643804&amp;quot; &amp;gt; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe src=&#34;http://player.vimeo.com/video/137643804&#34; frameborder=&#34;0&#34; webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;nearly-finished:33ea911532f0c95309659f2412cd62cb&#34;&gt;Nearly finished&lt;/h2&gt;

&lt;p&gt;In order to see your site in action, run Hugo&amp;rsquo;s built-in local server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now enter &lt;a href=&#34;//localhost:1313&#34;&gt;&lt;code&gt;localhost:1313&lt;/code&gt;&lt;/a&gt; in the address bar of your browser.&lt;/p&gt;

&lt;h2 id=&#34;contributing:33ea911532f0c95309659f2412cd62cb&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Did you found a bug or got an idea for a new feature? Feel free to use the &lt;a href=&#34;//github.com/digitalcraftsman/hugo-icarus-theme/issues&#34;&gt;issue tracker&lt;/a&gt; to let me know. Or make directly a &lt;a href=&#34;//github.com/digitalcraftsman/hugo-icarus-theme/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license:33ea911532f0c95309659f2412cd62cb&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;This theme is released under the MIT license. For more information read the &lt;a href=&#34;https://github.com/digitalcraftsman/hugo-icarus-theme/blob/master/LICENSE.md&#34;&gt;License&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;annotations:33ea911532f0c95309659f2412cd62cb&#34;&gt;Annotations&lt;/h2&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;//github.com/spf13&#34;&gt;Steve Francia&lt;/a&gt; for creating Hugo and the awesome community around the project.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>