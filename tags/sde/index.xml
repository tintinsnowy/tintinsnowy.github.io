<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDE on Sherry&#39;s blog</title>
    <link>https://tintinsnowy.com/tags/sde/</link>
    <description>Recent content in SDE on Sherry&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Powered by [Hugo](//gohugo.io). Content by Xiaoli Yang</copyright>
    <lastBuildDate>Sun, 01 Mar 2020 09:57:55 +0100</lastBuildDate>
    
	<atom:link href="https://tintinsnowy.com/tags/sde/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>10 Basic Tips on Bash Scripting to Optimize Your Operation Work</title>
      <link>https://tintinsnowy.com/2020/03/01/10-basic-tips-on-bash-scripting-to-optimize-your-operation-work/</link>
      <pubDate>Sun, 01 Mar 2020 09:57:55 +0100</pubDate>
      
      <guid>https://tintinsnowy.com/2020/03/01/10-basic-tips-on-bash-scripting-to-optimize-your-operation-work/</guid>
      <description>Shell programming is such an essential skill that you need to master, if you want to step further into the Linux/Unix world. Being able to program on shell will accelerate your operation work. Because in daily operation, you cannot avoid searching&amp;amp;analying logs, running and proceeding other system scripts periodically, etc. I know it may bore you easily, that is why I want to write down those tips.
Bash Shell Script Basics We usually call it as Bash Shell, because Bash is the most widely used shell interpreter.</description>
    </item>
    
    <item>
      <title>Git tips in DevOps workflow</title>
      <link>https://tintinsnowy.com/2019/06/28/git-tips-in-devops-workflow/</link>
      <pubDate>Fri, 28 Jun 2019 09:57:55 +0100</pubDate>
      
      <guid>https://tintinsnowy.com/2019/06/28/git-tips-in-devops-workflow/</guid>
      <description>This is the second phase of my current project. After the Beta version of the project, I upgraded and shifted the whole project into DevOps workflow. Git, is very essential part of the version control. So in this post, I will share some tips that I have used to solve problems
Git Branching Models There should be at least two Branches: Dev and Master. Dev branch is the front line defensing bugs.</description>
    </item>
    
  </channel>
</rss>