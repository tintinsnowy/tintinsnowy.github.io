<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Sherry&#39;s blog</title>
    <link>https://tintinsnowy.com/en/tags/devops/</link>
    <description>Recent content in DevOps on Sherry&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Powered by [Hugo](//gohugo.io). Content by Xiaoli Yang</copyright>
    <lastBuildDate>Fri, 28 Jun 2019 09:57:55 +0100</lastBuildDate>
    
	<atom:link href="https://tintinsnowy.com/en/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git tips in DevOPs workflow</title>
      <link>https://tintinsnowy.com/en/2019/06/28/git-tips-in-devops-workflow/</link>
      <pubDate>Fri, 28 Jun 2019 09:57:55 +0100</pubDate>
      
      <guid>https://tintinsnowy.com/en/2019/06/28/git-tips-in-devops-workflow/</guid>
      <description>This is the second phase of my current project. After the Beta version of the project, I upgraded and shift the whole project into DevOps workflow. Git, is most essential part of the version control. So in this post, I will shsare some tips that I have encountered
Git Branching Models There should be at least two models: Dev and Master. Dev branch is the front line defensing bugs. This branch will proceed first round of testing.</description>
    </item>
    
  </channel>
</rss>